(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{687:function(t,r,a){"use strict";a.r(r);var s=a(18),v=Object(s.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" MySQL")]),t._v(" "),a("ul",[a("li",[t._v("存储引擎（InnoDB）")]),t._v(" "),a("li",[t._v("事务")]),t._v(" "),a("li",[t._v("锁")]),t._v(" "),a("li",[t._v("索引(B+Tree)")])]),t._v(" "),a("h3",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("数据类型")]),t._v("、")]),t._v(" "),a("li",[t._v("过期策略(惰性删除和定期扫描)")]),t._v(" "),a("li",[t._v("淘汰策略（maxmemory-policy、LRU算法、近似LRU算法）")]),t._v(" "),a("li",[t._v("缓存穿透：缓存空对象、布隆过滤器")]),t._v(" "),a("li",[t._v("缓存击穿：加互斥锁、永不过期")]),t._v(" "),a("li",[t._v("缓存雪崩：避免同时过期、构建高可用的Redis缓存、构建多级缓存、启用限流和降级措施")]),t._v(" "),a("li",[a("strong",[t._v("分布式锁")]),t._v("：同步锁、分布式锁（实现方式：基于数据库、基于Redis、基于Zookeeper）")])]),t._v(" "),a("h3",{attrs:{id:"spring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring"}},[t._v("#")]),t._v(" Spring")]),t._v(" "),a("ul",[a("li",[t._v("Spring IoC")]),t._v(" "),a("li",[t._v("Spring AOP")]),t._v(" "),a("li",[t._v("Spring MVC")])]),t._v(" "),a("h4",{attrs:{id:"kafka-延迟怎么解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kafka-延迟怎么解决"}},[t._v("#")]),t._v(" Kafka 延迟怎么解决？")])])}),[],!1,null,null,null);r.default=v.exports}}]);