(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{655:function(a,t,s){"use strict";s.r(t);var r=s(18),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("blockquote",[s("p",[a._v("这篇文章以问答的形式用于快速回顾知识点以及用于自测。"),s("br"),a._v("\n因为知识点相当多，即使在看时能够理解记住，但过后也往往只是有印象，大概知道是什么东西，但想回答出来却总是卡壳，看了忘，忘了看。因此，这篇文章用于帮助速记回忆，自测时可以由这些点延伸。\n注：参考的主要是 Guide 哥的网站内容以及 chatGPT。")])]),a._v(" "),s("h2",{attrs:{id:"集合概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合概述"}},[a._v("#")]),a._v(" 集合概述")]),a._v(" "),s("h4",{attrs:{id:"说说-list、set、queue、map-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说说-list、set、queue、map-的区别"}},[a._v("#")]),a._v(" 说说 List、Set、Queue、Map 的区别？")]),a._v(" "),s("h4",{attrs:{id:"如何选用集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何选用集合"}},[a._v("#")]),a._v(" 如何选用集合？")]),a._v(" "),s("h4",{attrs:{id:"为什么要使用集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用集合"}},[a._v("#")]),a._v(" 为什么要使用集合？")]),a._v(" "),s("h2",{attrs:{id:"collection-子接口之-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collection-子接口之-list"}},[a._v("#")]),a._v(" Collection 子接口之 List")]),a._v(" "),s("h4",{attrs:{id:"arraylist-和-array-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-和-array-的区别"}},[a._v("#")]),a._v(" ArrayList 和 Array 的区别？")]),a._v(" "),s("h4",{attrs:{id:"arraylist-和-vector-的区别-了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-和-vector-的区别-了解"}},[a._v("#")]),a._v(" ArrayList 和 Vector 的区别？（了解）")]),a._v(" "),s("h4",{attrs:{id:"vector-和-stack-的区别-了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vector-和-stack-的区别-了解"}},[a._v("#")]),a._v(" Vector 和 Stack 的区别？（了解）")]),a._v(" "),s("h4",{attrs:{id:"arraylist-可以添加-null-值吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-可以添加-null-值吗"}},[a._v("#")]),a._v(" ArrayList 可以添加 null 值吗？")]),a._v(" "),s("h4",{attrs:{id:"arraylist-插入和删除元素的时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-插入和删除元素的时间复杂度"}},[a._v("#")]),a._v(" ArrayList 插入和删除元素的时间复杂度？")]),a._v(" "),s("h4",{attrs:{id:"linkedlist-插入和删除元素的时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist-插入和删除元素的时间复杂度"}},[a._v("#")]),a._v(" LinkedList 插入和删除元素的时间复杂度？")]),a._v(" "),s("h4",{attrs:{id:"linkedlist-为什么不能实现-randomaccess-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist-为什么不能实现-randomaccess-接口"}},[a._v("#")]),a._v(" LinkedList 为什么不能实现 RandomAccess 接口？")]),a._v(" "),s("h4",{attrs:{id:"arraylist-和-linkedlist-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-和-linkedlist-的区别"}},[a._v("#")]),a._v(" ArrayList 和 LinkedList 的区别？")]),a._v(" "),s("h4",{attrs:{id:"双向列表和双向循环链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双向列表和双向循环链表"}},[a._v("#")]),a._v(" 双向列表和双向循环链表？")]),a._v(" "),s("h4",{attrs:{id:"randomaccess-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#randomaccess-接口"}},[a._v("#")]),a._v(" RandomAccess 接口？")]),a._v(" "),s("h4",{attrs:{id:"说一说-arraylist-的扩容机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说一说-arraylist-的扩容机制"}},[a._v("#")]),a._v(" 说一说 ArrayList 的扩容机制？")]),a._v(" "),s("h2",{attrs:{id:"collection-子接口之-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collection-子接口之-set"}},[a._v("#")]),a._v(" Collection 子接口之 Set")]),a._v(" "),s("h4",{attrs:{id:"comparable-接口和-comparator-接口有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comparable-接口和-comparator-接口有什么区别"}},[a._v("#")]),a._v(" Comparable 接口和 Comparator 接口有什么区别？")]),a._v(" "),s("h4",{attrs:{id:"无序性和不可重复性的含义是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无序性和不可重复性的含义是什么"}},[a._v("#")]),a._v(" 无序性和不可重复性的含义是什么？")]),a._v(" "),s("h4",{attrs:{id:"比较-hashset、linkedhashset、treeset-的异同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较-hashset、linkedhashset、treeset-的异同"}},[a._v("#")]),a._v(" 比较 HashSet、LinkedHashSet、TreeSet 的异同？")]),a._v(" "),s("h2",{attrs:{id:"collection-子接口之-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collection-子接口之-queue"}},[a._v("#")]),a._v(" Collection 子接口之 Queue")]),a._v(" "),s("h4",{attrs:{id:"queue-和-deque-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queue-和-deque-的区别"}},[a._v("#")]),a._v(" Queue 和 Deque 的区别？")]),a._v(" "),s("h4",{attrs:{id:"arraydeque-和-linkedlist-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraydeque-和-linkedlist-的区别"}},[a._v("#")]),a._v(" ArrayDeque 和 LinkedList 的区别？")]),a._v(" "),s("h4",{attrs:{id:"说一说-priorityqueue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说一说-priorityqueue"}},[a._v("#")]),a._v(" 说一说 PriorityQueue？")]),a._v(" "),s("h2",{attrs:{id:"map-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-接口"}},[a._v("#")]),a._v(" Map 接口")]),a._v(" "),s("h4",{attrs:{id:"hashmap-和-hashtable-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap-和-hashtable-的区别"}},[a._v("#")]),a._v(" HashMap 和 HashTable 的区别？")]),a._v(" "),s("h4",{attrs:{id:"hashmap-和-hashset-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap-和-hashset-的区别"}},[a._v("#")]),a._v(" HashMap 和 HashSet 的区别？")]),a._v(" "),s("h4",{attrs:{id:"hashmap-和-treemap-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap-和-treemap-的区别"}},[a._v("#")]),a._v(" HashMap 和 TreeMap 的区别？")]),a._v(" "),s("h4",{attrs:{id:"hashset-如何检查重复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset-如何检查重复"}},[a._v("#")]),a._v(" HashSet 如何检查重复？")]),a._v(" "),s("h4",{attrs:{id:"hashmap-的底层实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap-的底层实现"}},[a._v("#")]),a._v(" HashMap 的底层实现？")]),a._v(" "),s("h4",{attrs:{id:"hashmap-的长度为什么是-2-的幂次方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap-的长度为什么是-2-的幂次方"}},[a._v("#")]),a._v(" HashMap 的长度为什么是 2 的幂次方？")]),a._v(" "),s("h4",{attrs:{id:"hashmap-多线程操作会导致死循环问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap-多线程操作会导致死循环问题"}},[a._v("#")]),a._v(" HashMap 多线程操作会导致死循环问题？")]),a._v(" "),s("h4",{attrs:{id:"hashmap-由哪几种常见的遍历方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap-由哪几种常见的遍历方法"}},[a._v("#")]),a._v(" HashMap 由哪几种常见的遍历方法？")]),a._v(" "),s("h4",{attrs:{id:"concurrenthashmap-和-hashtable-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap-和-hashtable-的区别"}},[a._v("#")]),a._v(" ConcurrentHashMap 和 HashTable 的区别？")]),a._v(" "),s("h4",{attrs:{id:"concurrenthashmap-线程安全的具体实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap-线程安全的具体实现方式"}},[a._v("#")]),a._v(" ConcurrentHashMap 线程安全的具体实现方式？")]),a._v(" "),s("h4",{attrs:{id:"jdk1-7-和-jdk1-8-的-concurrenthashmap-有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk1-7-和-jdk1-8-的-concurrenthashmap-有什么不同"}},[a._v("#")]),a._v(" JDK1.7 和 JDK1.8 的 ConcurrentHashMap 有什么不同？")])])}),[],!1,null,null,null);t.default=e.exports}}]);